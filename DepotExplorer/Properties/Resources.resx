<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CancelEditing" xml:space="preserve">
    <value>Wollen Sie die Bearbeitung abbrechen?</value>
  </data>
  <data name="CannotFindUserSettings" xml:space="preserve">
    <value>Datei {0} nicht gefunden.</value>
  </data>
  <data name="CannotLoadMasterdata" xml:space="preserve">
    <value>Stammdaten können nicht gelesen werden.</value>
  </data>
  <data name="DatabaseError" xml:space="preserve">
    <value>Fehler beim Öffnen der Datenbank: {0}.</value>
  </data>
  <data name="DeleteDepot" xml:space="preserve">
    <value>Wollen Sie das {0} wirklich löschen?</value>
  </data>
  <data name="DeleteFonds" xml:space="preserve">
    <value>Wollen Sie den {0} wirklich löschen?</value>
  </data>
  <data name="DepotHasChanged" xml:space="preserve">
    <value>Depot wurde verändert.</value>
  </data>
  <data name="FondHasChanged" xml:space="preserve">
    <value>Wertpapier wurde verändert.</value>
  </data>
  <data name="JahresKursDoppelt" xml:space="preserve">
    <value>Für jedes Jahr darf nur ein Kurs erfasst werden ({0}).</value>
  </data>
  <data name="LoadDepotEntwicklungData" xml:space="preserve">
    <value>Lade die Depotentwicklungsdaten</value>
  </data>
  <data name="LoadFondEntwicklungData" xml:space="preserve">
    <value>Lade die Fondentwicklungsdaten</value>
  </data>
  <data name="LoadFondsForDepot" xml:space="preserve">
    <value>Lade Fonds für Depot</value>
  </data>
  <data name="LoadJahresAbschlussData" xml:space="preserve">
    <value>Lade die Jahresabschlussdaten</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Depot Explorer</value>
  </data>
  <data name="TitleZuordnungsDialog" xml:space="preserve">
    <value>Auswahl der Fonds für {0}</value>
  </data>
  <data name="WertpapierBestandDoppelt" xml:space="preserve">
    <value>Für jedes Jahr dürfen die Bestände für ein Wertpapier nur einmal erfasst werden ({0}).</value>
  </data>
  <data name="ZuordnungenWereChanged" xml:space="preserve">
    <value>Zuordnungen wurden verändert.</value>
  </data>
  <data name="JahresKurseNichtLueckenlos" xml:space="preserve">
    <value>Die Kurse sind nicht lückenlos</value>
  </data>
  <data name="WKNValidationNotUnique" xml:space="preserve">
    <value>Die WKN existiert bereits.</value>
  </data>
  <data name="BankHasChanged" xml:space="preserve">
    <value>Bank wurde verändert.</value>
  </data>
  <data name="DeleteBank" xml:space="preserve">
    <value>Wollen Sie die {0} wirklich löschen?</value>
  </data>
  <data name="CannotEditBankWhileWorkWithDepot" xml:space="preserve">
    <value>Bank kann nicht geändert werden, während Depots geöffnet sind.</value>
  </data>
  <data name="CannotEditFondWhileWorkWithDepot" xml:space="preserve">
    <value>Fond kann nicht geändert werden, während Depots geöffnet sin.</value>
  </data>
  <data name="CannotRemoveBankWhileWorkWithDepot" xml:space="preserve">
    <value>Bank kann nicht gelöscht werden, während Depots geöffnet sind.</value>
  </data>
  <data name="CannotRemoveFondWhileWorkWithDepot" xml:space="preserve">
    <value>Fond kann nicht gelöscht werden, während Depots geöffnet sind.</value>
  </data>
  <data name="CannotWorkWithDepotWhileEditingBank" xml:space="preserve">
    <value>Depot kann nicht geöffnet werden, während Banken verändert werden.</value>
  </data>
  <data name="CannotWorkWithDepotWhileEditingFond" xml:space="preserve">
    <value>Depot kann nicht geöffnet werden, während Fonds verändert werden.</value>
  </data>
  <data name="KurseWereChanged" xml:space="preserve">
    <value>Kurse wurden geändert.</value>
  </data>
  <data name="WertpapierKursDoppelt" xml:space="preserve">
    <value>Für jedes Wertpapier darf nur ein Kurs erfasst werden ({0}).</value>
  </data>
  <data name="CannotEditFondWhileWorkWithYear" xml:space="preserve">
    <value>Fond kann nicht geändert werden, während Jahre geöffnet sind.</value>
  </data>
  <data name="CannotWorkWithYearWhileEditingFond" xml:space="preserve">
    <value>Jahr kann nicht geöffnet werden, während Fonds geändert werden.</value>
  </data>
  <data name="CannotRemoveFondWhileWorkWithYear" xml:space="preserve">
    <value>Fond kann nicht gelöscht werden, während Jahre geöffnet sind.</value>
  </data>
  <data name="Bank" xml:space="preserve">
    <value>Bank</value>
  </data>
  <data name="DataAreChanged" xml:space="preserve">
    <value>Daten ({0}) werden geändert.</value>
  </data>
  <data name="Depot" xml:space="preserve">
    <value>Depot</value>
  </data>
  <data name="Fond" xml:space="preserve">
    <value>Fond</value>
  </data>
  <data name="TerminateProgramm" xml:space="preserve">
    <value>Wollen Sie das Programm beenden?</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Jahr</value>
  </data>
  <data name="Aktie" xml:space="preserve">
    <value>Aktie</value>
  </data>
  <data name="AktieHasChanged" xml:space="preserve">
    <value>Aktie wurde verändert.</value>
  </data>
  <data name="CannotEditAktieWhileWorkWithDepot" xml:space="preserve">
    <value>Aktie kann nicht verändert werden, während Depots geöffnet sind.</value>
  </data>
  <data name="CannotEditAktieWhileWorkWithYear" xml:space="preserve">
    <value>Aktie kann nicht verändert werden, während Jahre geöffnet sind.</value>
  </data>
  <data name="CannotRemoveAktieWhileWorkWithDepot" xml:space="preserve">
    <value>Aktie kann nicht gelöscht werden, während Depots geöffnet sind.</value>
  </data>
  <data name="CannotRemoveAktieWhileWorkWithYear" xml:space="preserve">
    <value>Aktie kann nicht gelöscht werden, während Jahre geöffnet sind.</value>
  </data>
  <data name="DeleteAktie" xml:space="preserve">
    <value>Wollen Sie die {0} wirklich löschen?</value>
  </data>
  <data name="Addresse" xml:space="preserve">
    <value>Addresse</value>
  </data>
  <data name="CannotWorkWithDepotWhileEditingAktie" xml:space="preserve">
    <value>Depot kann nicht geöffnet werden, während Aktien verändert werden.</value>
  </data>
  <data name="CannotWorkWithYearWhileEditingAktie" xml:space="preserve">
    <value>Jahr kann nicht geöffnet werden, während Aktien geändert werden.</value>
  </data>
  <data name="HeaderBestandControlAnteile" xml:space="preserve">
    <value>Anteile</value>
  </data>
  <data name="HeaderBestandControlDividende" xml:space="preserve">
    <value>Dividende</value>
  </data>
  <data name="HeaderBestandControlKauf" xml:space="preserve">
    <value>Kauf</value>
  </data>
  <data name="HeaderBestandControlVerkauf" xml:space="preserve">
    <value>Verkauf</value>
  </data>
  <data name="HeaderBestandControlWertpapier" xml:space="preserve">
    <value>Wertpapier</value>
  </data>
  <data name="HeaderKursControlJahr" xml:space="preserve">
    <value>Jahr</value>
  </data>
  <data name="HeaderKursControlWert" xml:space="preserve">
    <value>Wert</value>
  </data>
  <data name="HeaderKursControlWertpapier" xml:space="preserve">
    <value>Wertpapier</value>
  </data>
  <data name="CannotDeleteWertpapierMappedToDepot" xml:space="preserve">
    <value>{0} kann nicht gelöscht werden. Das Wertpapier ist bereits Depots zugeordnet.</value>
  </data>
  <data name="CannotDeleteBankUsedByDepots" xml:space="preserve">
    <value>{0} kann nicht gelöscht werden. Es wird von Depots verwendet ({1}).</value>
  </data>
</root>